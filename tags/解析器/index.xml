<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>解析器 - 标签 - Ame</title>
        <link>https://example.com/tags/%E8%A7%A3%E6%9E%90%E5%99%A8/</link>
        <description>解析器 - 标签 - Ame</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>vlicecream520@gmail.com (Ame)</managingEditor>
            <webMaster>vlicecream520@gmail.com (Ame)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Fri, 21 Jul 2023 16:29:59 &#43;0800</lastBuildDate><atom:link href="https://example.com/tags/%E8%A7%A3%E6%9E%90%E5%99%A8/" rel="self" type="application/rss+xml" /><item>
    <title>解析器</title>
    <link>https://example.com/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E8%A7%A3%E6%9E%90%E5%99%A8/</link>
    <pubDate>Fri, 21 Jul 2023 16:29:59 &#43;0800</pubDate>
    <author>Ame</author>
    <guid>https://example.com/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E8%A7%A3%E6%9E%90%E5%99%A8/</guid>
    <description><![CDATA[<h1 id="解析器">解析器</h1>
<h2 id="领域规则模式">领域规则模式</h2>
<ol>
<li><em><strong>什么是领域规则</strong></em>
<ul>
<li><em>在特定领域中, 某些变化虽然频繁, 但可以抽象为某种规则，这时候, 结合特定领域, 将问题抽象为语法规则, 从而给出在该领域下的一般性的解决方案</em></li>
</ul>
</li>
<li><em><strong>典型模式</strong></em>
<ul>
<li><em>Interpreter</em></li>
</ul>
</li>
</ol>
<h2 id="动机">动机</h2>
<ol>
<li><em>在软件构建过程中, 如果某一特定领域的问题比较复杂, 类似的结构不断重复出现, 如果使用普通的编程方式来实现将面临非常频繁的变化</em></li>
<li><em>在这种情况下, 将特定领域的问题表达为某种语法规则下的句子，然后构建一个解释器来解释这样的句子, 从而达到解决问题的目的</em></li>
</ol>
<h2 id="模式定义">模式定义</h2>
<ol>
<li><em>给定一个语言, 定义他的文法的一种表示, 并定义一种解释器, 这个解释器使用该表示来解释语言中的句子</em></li>
</ol>
<h2 id="要点总结">要点总结</h2>
<ol>
<li><em>Interpreter模式的应用场景是这个模式的一个难点，只有满足 &ldquo;业务规则频繁变化, 且类似的结构不断重复出现, 并且容易抽象为语言规则的问题&quot;才适合这种模式</em></li>
<li><em>使用这种模式来表示文法规则, 从而可以使用面向对象技巧来方便的 扩展 文法</em></li>
<li><em>Interpreter模式适合简单的文法表示, 对于复杂的文法表示, 这种模式会产生较大的类层次结构，需要求助于第三方的语法分析器</em></li>
</ol>]]></description>
</item>
</channel>
</rss>
