<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>All Posts - Ame</title>
        <link>https://example.com/en/posts/</link>
        <description>All Posts | Ame</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>vlicecream520@gmail.com (Ame)</managingEditor>
            <webMaster>vlicecream520@gmail.com (Ame)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sat, 04 Mar 2023 16:29:59 &#43;0800</lastBuildDate><atom:link href="https://example.com/en/posts/" rel="self" type="application/rss+xml" /><item>
    <title>二分查找</title>
    <link>https://example.com/en/%E7%AE%97%E6%B3%95-%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/</link>
    <pubDate>Sat, 04 Mar 2023 16:29:59 &#43;0800</pubDate>
    <author>Ame</author>
    <guid>https://example.com/en/%E7%AE%97%E6%B3%95-%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/</guid>
    <description><![CDATA[<h2 id="二分查找的思想-减而治之"><em><strong>二分查找的思想-减而治之</strong></em></h2>
<ol>
<li>
<p><em>二分查找通过不断缩小区间的范围来查找目标元素，这种&quot;不断缩小区间&quot;就是减而治之的思想</em></p>
</li>
<li>
<p><em>减而治之听起来高大上，其实就是排除法，我们每一次查找就排除掉一些元素，每一次重复此操作，自然就找到了我们的目标元素</em></p>
</li>
</ol>
<h2 id="二分查找的应用范围"><em><strong>二分查找的应用范围</strong></em></h2>
<ol>
<li>
<p><em>在有序数组中寻找一个目标值，有序和数组是重点</em></p>
</li>
<li>
<p><em>在整数范围内寻找一个目标值，也就是不一定是有序数组，旋转数组和山脉数组都可以用到二分法</em></p>
</li>
</ol>
<h2 id="二分查找的算法思路"><em><strong>二分查找的算法思路</strong></em></h2>
<h3 id="在循环体中查找元素"><em><strong>在循环体中查找元素</strong></em></h3>
<ol>
<li>
<p><em>简介</em></p>
<ul>
<li><em>此思路很简单，就是直接在数组中查找到目标元素</em></li>
<li><em>时间复杂度 O(log N)，这里的N是指数组的长度</em></li>
<li><em>空间复杂度：由于二分查找算法在执行的过程中只使用到常数个临时变量，因此空间复杂度是 O(1)。</em></li>
</ul>
</li>
<li>
<p><em>代码模板</em></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span></code></pr]]></description>
</item>
</channel>
</rss>
